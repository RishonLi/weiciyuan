buildscript {

    repositories {
        mavenCentral()
//        maven { url 'http://download.crashlytics.com/maven' }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:2.1.3+'
//        classpath 'com.crashlytics.tools.gradle:crashlytics-gradle:1.14.4'
    }
}
apply plugin: 'com.android.application'
//apply plugin: 'crashlytics'
dependencies {
//    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.google.code.gson:gson:2.2.2'
    compile 'com.android.support:support-v4:21.0.0'
//    compile 'com.crashlytics.android:crashlytics:1.1.11'


    compile(project(':libs:slidingmenulibrary')) {
        exclude group: 'com.google.android', module: 'support-v4'
    }
    compile(project(':libs:showcaseviewlibrary')) {
        exclude group: 'com.google.android', module: 'support-v4'

    }
}

android {
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    buildToolsVersion "25.2.4"
    compileSdkVersion 25

    defaultConfig {

        applicationId 'org.qii.weiciyuan'

        minSdkVersion 25
        targetSdkVersion 25
        versionName null
    }
    buildTypes {

    }
    sourceSets {
        main {
            manifest {
                srcFile 'src/main/AndroidManifest.xml'
            }

            assets {
                srcDir 'src/main/assets'
            }
            aidl {
                srcDir 'src/main/java/com/sina/sso'
            }
        }
    }
    lintOptions {
        abortOnError false
    }
    signingConfigs {
        debug {
            storeFile file("debug.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }

        release {
            if (System.getenv("KEYSTORE") != null) {
                storeFile file(System.getenv("KEYSTORE"))
                storePassword System.getenv("KEYSTORE_PASSWORD")
                keyAlias System.getenv("KEY_ALIAS")
                keyPassword System.getenv("KEY_PASSWORD")
            }
        }
    }
    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            resValue "string", "applicationId", "org.qii.weiciyuan" + getApplicationIdSuffix()
            resValue "string", "weiciyuanOfficalWeiboName",
                    "org.qii.weiciyuan" + getApplicationIdSuffix() + ".mention://@四次元App"
            debuggable true
            signingConfig signingConfigs.debug
        }
        release {
            resValue "string", "applicationId", "org.qii.weiciyuan"
            resValue "string", "weiciyuanOfficalWeiboName",
                    "org.qii.weiciyuan" + ".mention://@四次元App"
            debuggable false
            signingConfig signingConfigs.release
        }

    }
    dexOptions {
        preDexLibraries = false
    }
}
